//Dorothy2
//caption=SpeedyShare.com
//version=0.12
//hint=http://(www\.)?speedy(\.sh|share\.com|live\.net)/(live/|files/)?\w+
//match=http://(www\.)?speedy(\.sh|share\.com|live\.net)/(live/|files/)?\w+
//author=wan
//path=program
//priority=500
//end

/*
Copyright (C) 2015 wan <thewanwan111@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

function(){
	common_load('Expiration');
	var ini = new Ini(Dorothy.userIniPath);
	var exp = new Expiration();
	if(exp.check()){
		headers.Cookie = ini.read('Exp_header', 'Cookie', '');
		return;
	}
	common_load('http','fileSave');
	
	var http = new Http({autoRedirect: true});
	var url = new URL(urlinfo.url);
	if(url.url.match('speedy(\.sh|share\.com|live\.net)/live/([^/]+)/')){
		var location = http.headLocation(url.url);
		if(!location){
			println('error>' + http.responseHeader.code);
			exit();
		}
		url.url = location;
		urlinfo.url = url.url;
		headers.Host = url.host;
		Dorothy.continue = true;
		return;
	}
	
	http.requestHeader.Cookie = 'trans=en';
	http.get(url.url);
	if(http.responseHeader.code != 200){
		return retry('error> ' + http.responseHeader.code);
	}
	
	if(http.data.indexOf('<span class=downloadfilenamenotfound>') != -1){
		println('File not found');
		exit();
	}
	if(http.data.indexOf('This file can only be downloaded with SpeedyShare Premium. Get Premium Now!</a>') != -1){
		println('Premium Only!');
		exit();
	}

	var filename, size;
	if(!http.data.match('<span class=downloadfilename>([^<]+)</span>.+?<div class=sizetagtext>([^<]+)<')){
		println('filename ‚ªŒ©‚Â‚©‚ç‚È‚¢');
		exit();
	}
	filename = RegExp.$1;
	size = RegExp.$2;

	if(!http.data.match(/<a href='([^']+)'><[^>]*alt='Slow Download'/)){
		println('Slow Download ‚ªŒ©‚Â‚©‚ç‚È‚¢');
		exit();
	}
	
	var location = http.headLocation(http.expandUrl(RegExp.$1));
	if(!location){
		println('error>' + http.responseHeader.code);
		exit();
	}

	url.url = location;
	urlinfo.url = url.url;
	headers.Host = url.host;
	headers.Cookie = http.requestHeader.Cookie;
	Dorothy.fileName = filename;
	
	ini.write('Exp_header', 'Cookie', headers.Cookie);
	ini.update();
	exp.update();
}
