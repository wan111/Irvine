//Dorothy2
//caption=vimeo.com用設定
//version=1.0
//hint=
//match=
//author=wan
//path=setting
//priority=
//end

/*
Copyright (C) 2016 wan <thewanwan111@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

function (){
	common_load('EZDialog', 'Utils');

	EZDialog.prototype.spinEdit=function(value, minValue, maxValue, width, fontName, fontSize){
		var tmp=new VCLSpinEdit(this.p);
		if(isUndefined(value)||isNull(value)){
			value=0;
		}
		if(!isUndefined(minValue)&&!isNull(minValue)){
			tmp.minValue=minValue;
		}
		if(!isUndefined(maxValue)&&!isNull(maxValue)){
			tmp.maxValue=maxValue;
		}
		if(!isUndefined(width)&&!isNull(width)){
			tmp.width=width;
		}
		if(!isUndefined(fontName)&&!isNull(fontName)){
			tmp.font.name=this.fontEx(fontName);
		}
		if(!isUndefined(fontSize)&&!isNull(fontSize)){
			tmp.font.size=fontSize;
		}
		tmp.Value=value;
		tmp.top=this.top;
		tmp.left=this.left+this.marginLeft;
		s=tmp.left+tmp.width;
		if(s>this.p.width){
			this.p.width=s+marginRight;
		}
		if(this.maxWidth<this.p.width){
			this.maxWidth=this.p.width;
		}
		this.lf(tmp);
		return tmp;
	};
	EZDialog.prototype.label_spinEdit = function(caption, value, minValue, maxValue, width1, width2, Alignment, fontName, fontSize){
		Alignment= Alignment || 'l';
		var oldCont = this.contFlag;
		if(!oldCont) this.contOn();
		var label = this.label(caption, width1, Alignment, fontName, fontSize);
		var spin = this.spinEdit(value, minValue, maxValue, width2, fontName, fontSize);
		spin.left = label.left + label.width + 5;

		label.height = spin.height;
		label.Alignment = this.Alignment[Alignment];
		label.Layout = 'tlCenter';

		if(!oldCont) this.contOff();
		return {label: label, spinEdit: spin};
	};

	user_program_load('vimeo_w');
	var opt = new Vimeo().opt;

	var d = new EZDialog('vimeo_w');
	var frm = {};

	frm.groupGeneral = d.group('一般');
	frm.checkDebug = d.checkBox('デバッグモード', opt.general.debug);
	frm.checkTrace = d.checkBox('トレースモード', opt.general.trace);
	frm.checkSkip = d.checkBox('ファイル名情報が取得出来なくても続行する', opt.general.skipError);
	frm.checkQuiet = d.checkBox('メッセージを表示しない', opt.general.quiet);
	d.groupEnd(frm.groupGeneral);


	frm.groupDL = d.group('ダウンロード');
	frm.label270 = d.label('A: 270p', null, null, 'g');
	frm.label360 = d.label('B: 360p', null, null, 'g');
	frm.label480 = d.label('C: 480p', null, null, 'g');
	frm.label540 = d.label('D: 540p', null, null, 'g');
	frm.label720 = d.label('E: 720p', null, null, 'g');
	frm.label1080 = d.label('F: 1080p', null, null, 'g');
	frm.labelOriginal = d.label('Z: Original', null, null, 'g');
	var priorityWidth = d.sWidth('ABCDEF  ');
	frm.editPriority = d.label_edit('優先順位', opt.download.priority, null, priorityWidth);
	frm.checkReQueue = d.checkBox('新規アイテムとして追加する', opt.download.reQueue);
	d.groupEnd(frm.groupDL);

	frm.groupAddItem = d.group('AddItem');
	var itemCapWidth = d.sWidth('AAAAAAAA');
	var itemWidth = d.sWidth('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');
	frm.editMode = d.label_edit('Mode', opt.addItem.Mode, itemCapWidth, itemWidth);
	frm.editQueue = d.label_edit('Queue', opt.addItem.Queue, itemCapWidth, itemWidth);
	frm.editListName = d.label_edit('Listname', opt.addItem.Listname, itemCapWidth, itemWidth);
	frm.checkWorkaround = d.checkBox('Workaround', opt.addItem.Workaround);
	d.groupEnd(frm.groupAddItem);

	d.moveRightTop();

	frm.groupName = d.group('保存ファイル名(拡張子不要)');
	frm.checkZen2han   = d.checkBox('全角文字を半角に変換する', opt.fileName.zen2han);
	frm.labelTitle     = d.label('%TITLE%-------------タイトル', null, null,'g');
	frm.labelQuality   = d.label('%QUALITY%-----------画質(360p,480p,...)', null, null,'g');
	frm.labelFps       = d.label('%FPS%---------------fps', null, null, 'g');
	frm.labelWidth     = d.label('%WIDTH%-------------幅', null, null,'g');
	frm.labelHeight    = d.label('%HEIGHT%------------高さ', null, null,'g');
	frm.labelDuration  = d.label('%DURATION%----------再生時間', null, null,'g');
	frm.labelVID       = d.label('%VIDEO_ID%----------動画ID', null, null,'g');
	frm.labelVUrl      = d.label('%VIDEO_URL%---------動画URL', null, null, 'g');
	frm.labelUserName  = d.label('%USER_NAME%---------投稿者', null, null,'g');
	frm.labelUserUrl   = d.label('%USER_URL%----------投稿者のユーザーURL', null, null,'g');
	frm.labelUserID    = d.label('%USER_ID%-----------投稿者のID', null, null,'g');
	frm.labelUpDate    = d.label('%UPLOAD_DATE%-------投稿日時', null, null,'g');
	d.contOn();
	frm.labelTag       = d.label('%TAGS%--------------タグ', null, null,'g');
	d.widthSpace(10);
	frm.spinTagMax = d.label_spinEdit('タグ最大数', opt.fileName.tag.max, 0, null, null, d.sWidth('12341234'));
	frm.labelTag.height = frm.spinTagMax.label.height;
	frm.editTagDelimiter = d.label_edit('区切り文字', opt.fileName.tag.delimiter, null, d.sWidth('ABCD'));
	frm.spinTagLen = d.label_spinEdit('文字列化後の最大文字数', opt.fileName.tag.len, 0, null, null, d.sWidth('12431234'));
	d.contOff();
	d.contOn();
	frm.labelCat       = d.label('%CATEGORIES%--------カテゴリ', null, null,'g');
	d.widthSpace(10);
	frm.spinCatMax = d.label_spinEdit('カテゴリ最大数', opt.fileName.category.max, 0, null, null, d.sWidth('12341234'));
	frm.labelCat.height = frm.spinCatMax.label.height;
	frm.editCatDelimiter = d.label_edit('区切り文字', opt.fileName.category.delimiter, null, d.sWidth('ABCD'));
	frm.spinCatLen = d.label_spinEdit('文字列化後の最大文字数', opt.fileName.category.len, 0, null, null, d.sWidth('12431234'));
	d.contOff();
	//frm.labelPFUrl     = d.label('%PORTFOLIO_URL%-----ポートフォリオURL', null, null, 'g');
	//frm.labelPFID      = d.label('%PORTFOLIO_ID%------ポートフォリオID', null, null, 'g');
	frm.labelChName    = d.label('%CHANNEL_NAME%------チャンネル名', null, null, 'g');
	frm.labelChUrl     = d.label('%CHANNEL_URL%-------チャンネルURL', null, null, 'g');
	frm.labelChId      = d.label('%CHANNEL_ID%--------チャンネルID', null, null, 'g');
	frm.labelGrName    = d.label('%GROUP_NAME%--------グループ名', null, null, 'g');
	frm.labelGrUrl     = d.label('%GROUP_URL%---------グループURL', null, null, 'g');
	frm.labelGrID      = d.label('%GROUP_ID%----------グループID', null, null, 'g');
	//frm.labelODID      = d.label('%ALBUM_ID%----------アルバムID', null, null, 'g');
	//frm.labelODUrl     = d.label('%ONDEMAND_URL%------オンデマンドURL', null, null, 'g');
	//frm.labelTrackID   = d.label('%TRACK_ID%----------トラックID', null, null, 'g');
	//frm.labelMusicUrl  = d.label('%MUSIC_URL%---------ミュージックURL', null, null, 'g');
	//frm.labelMusicName = d.label('%MUSIC_NAME%--------ミュージック名', null, null, 'g');

	var nameWidth = d.sWidth('%TITLE% %USER_ID% %USER_URL% %USER_NAME% %WIDTH% %HEIGHT% %DURATION% %VIDEO_ID% %QUALITY% %FPS%');
	var nameCapWidth = d.sWidth('AAAAAAAA');
	frm.editVideo =    d.label_edit('通常動画', opt.fileName.template.video, nameCapWidth, nameWidth);
	//frm.editPro =      d.label_edit('vimeopro ', opt.fileName.template.pro, nameCapWidth, nameWidth);
	//frm.editOndemand = d.label_edit('ondemand', opt.fileName.template.ondemand, nameCapWidth, nameWidth);
	//frm.editMusic =    d.label_edit('music     ', opt.fileName.template.music, nameCapWidth, nameWidth);
	d.groupEnd(frm.groupName);


	frm.ok = d.ok_cancel();

	if(d.showModal() == 1){
		opt.general.debug = frm.checkDebug.Checked;
		opt.general.trace = frm.checkTrace.Checked;
		opt.general.skipError = frm.checkSkip.Checked;
		opt.general.quiet = frm.checkQuiet.Checked;
		opt.addItem.Mode = frm.editMode.edit.Text;
		opt.addItem.Queue = frm.editQueue.edit.Text;
		opt.addItem.Listname = frm.editListName.edit.Text;
		opt.addItem.Workaround = frm.checkWorkaround.Checked;
		opt.fileName.zen2han = frm.checkZen2han.Checked;
		opt.fileName.template.video = frm.editVideo.edit.Text;
		//opt.fileName.template.pro = frm.editPro.edit.Text;
		//opt.fileName.template.ondemand = frm.editOndemand.edit.Text;
		//opt.fileName.template.music = frm.editMusic.edit.Text;
		opt.fileName.tag.max = frm.spinTagMax.spinEdit.Value;
		opt.fileName.tag.len = frm.spinTagLen.spinEdit.Value;
		opt.fileName.tag.delimiter = frm.editTagDelimiter.edit.Text;
		opt.fileName.category.max = frm.spinCatMax.spinEdit.Value;
		opt.fileName.category.len = frm.spinCatLen.spinEdit.Value;
		opt.fileName.category.delimiter = frm.editCatDelimiter.edit.Text;
		opt.download.priority = frm.editPriority.edit.Text;
		opt.download.reQueue = frm.checkReQueue.Checked;
		Utils.saveOption(opt, 'vimeo_w.json');
		return;
	}

}
